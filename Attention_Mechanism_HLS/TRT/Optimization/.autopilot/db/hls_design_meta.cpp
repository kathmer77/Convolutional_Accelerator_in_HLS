#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("score_m_0_address0", 2, hls_out, 0, "ap_memory", "mem_address", 1),
	Port_Property("score_m_0_ce0", 1, hls_out, 0, "ap_memory", "mem_ce", 1),
	Port_Property("score_m_0_we0", 1, hls_out, 0, "ap_memory", "mem_we", 1),
	Port_Property("score_m_0_d0", 32, hls_out, 0, "ap_memory", "mem_din", 1),
	Port_Property("score_m_1_address0", 2, hls_out, 1, "ap_memory", "mem_address", 1),
	Port_Property("score_m_1_ce0", 1, hls_out, 1, "ap_memory", "mem_ce", 1),
	Port_Property("score_m_1_we0", 1, hls_out, 1, "ap_memory", "mem_we", 1),
	Port_Property("score_m_1_d0", 32, hls_out, 1, "ap_memory", "mem_din", 1),
	Port_Property("score_m_2_address0", 2, hls_out, 2, "ap_memory", "mem_address", 1),
	Port_Property("score_m_2_ce0", 1, hls_out, 2, "ap_memory", "mem_ce", 1),
	Port_Property("score_m_2_we0", 1, hls_out, 2, "ap_memory", "mem_we", 1),
	Port_Property("score_m_2_d0", 32, hls_out, 2, "ap_memory", "mem_din", 1),
	Port_Property("queries_0_address0", 2, hls_out, 3, "ap_memory", "mem_address", 1),
	Port_Property("queries_0_ce0", 1, hls_out, 3, "ap_memory", "mem_ce", 1),
	Port_Property("queries_0_q0", 32, hls_in, 3, "ap_memory", "mem_dout", 1),
	Port_Property("queries_0_address1", 2, hls_out, 3, "ap_memory", "MemPortADDR2", 1),
	Port_Property("queries_0_ce1", 1, hls_out, 3, "ap_memory", "MemPortCE2", 1),
	Port_Property("queries_0_q1", 32, hls_in, 3, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("queries_1_address0", 2, hls_out, 4, "ap_memory", "mem_address", 1),
	Port_Property("queries_1_ce0", 1, hls_out, 4, "ap_memory", "mem_ce", 1),
	Port_Property("queries_1_q0", 32, hls_in, 4, "ap_memory", "mem_dout", 1),
	Port_Property("queries_1_address1", 2, hls_out, 4, "ap_memory", "MemPortADDR2", 1),
	Port_Property("queries_1_ce1", 1, hls_out, 4, "ap_memory", "MemPortCE2", 1),
	Port_Property("queries_1_q1", 32, hls_in, 4, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("queries_2_address0", 2, hls_out, 5, "ap_memory", "mem_address", 1),
	Port_Property("queries_2_ce0", 1, hls_out, 5, "ap_memory", "mem_ce", 1),
	Port_Property("queries_2_q0", 32, hls_in, 5, "ap_memory", "mem_dout", 1),
	Port_Property("queries_2_address1", 2, hls_out, 5, "ap_memory", "MemPortADDR2", 1),
	Port_Property("queries_2_ce1", 1, hls_out, 5, "ap_memory", "MemPortCE2", 1),
	Port_Property("queries_2_q1", 32, hls_in, 5, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("keys_t_0_address0", 2, hls_out, 6, "ap_memory", "mem_address", 1),
	Port_Property("keys_t_0_ce0", 1, hls_out, 6, "ap_memory", "mem_ce", 1),
	Port_Property("keys_t_0_q0", 32, hls_in, 6, "ap_memory", "mem_dout", 1),
	Port_Property("keys_t_1_address0", 2, hls_out, 7, "ap_memory", "mem_address", 1),
	Port_Property("keys_t_1_ce0", 1, hls_out, 7, "ap_memory", "mem_ce", 1),
	Port_Property("keys_t_1_q0", 32, hls_in, 7, "ap_memory", "mem_dout", 1),
	Port_Property("keys_t_2_address0", 2, hls_out, 8, "ap_memory", "mem_address", 1),
	Port_Property("keys_t_2_ce0", 1, hls_out, 8, "ap_memory", "mem_ce", 1),
	Port_Property("keys_t_2_q0", 32, hls_in, 8, "ap_memory", "mem_dout", 1),
};
const char* HLS_Design_Meta::dut_name = "score_matrix";
