-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity score_matrix is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    score_m_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    score_m_0_ce0 : OUT STD_LOGIC;
    score_m_0_we0 : OUT STD_LOGIC;
    score_m_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    score_m_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    score_m_1_ce0 : OUT STD_LOGIC;
    score_m_1_we0 : OUT STD_LOGIC;
    score_m_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    score_m_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    score_m_2_ce0 : OUT STD_LOGIC;
    score_m_2_we0 : OUT STD_LOGIC;
    score_m_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    queries_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    queries_0_ce0 : OUT STD_LOGIC;
    queries_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    queries_0_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    queries_0_ce1 : OUT STD_LOGIC;
    queries_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    queries_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    queries_1_ce0 : OUT STD_LOGIC;
    queries_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    queries_1_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    queries_1_ce1 : OUT STD_LOGIC;
    queries_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    queries_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    queries_2_ce0 : OUT STD_LOGIC;
    queries_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    queries_2_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    queries_2_ce1 : OUT STD_LOGIC;
    queries_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    keys_t_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    keys_t_0_ce0 : OUT STD_LOGIC;
    keys_t_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    keys_t_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    keys_t_1_ce0 : OUT STD_LOGIC;
    keys_t_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    keys_t_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    keys_t_2_ce0 : OUT STD_LOGIC;
    keys_t_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of score_matrix is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "score_matrix_score_matrix,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu11p-flga2577-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.297000,HLS_SYN_LAT=57,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1594,HLS_SYN_LUT=1164,HLS_VERSION=2021_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal queries_2_load_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal queries_0_load_reg_291 : STD_LOGIC_VECTOR (31 downto 0);
    signal queries_1_load_reg_296 : STD_LOGIC_VECTOR (31 downto 0);
    signal queries_2_load_1_reg_331 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal queries_0_load_1_reg_337 : STD_LOGIC_VECTOR (31 downto 0);
    signal queries_1_load_1_reg_342 : STD_LOGIC_VECTOR (31 downto 0);
    signal queries_2_load_2_reg_347 : STD_LOGIC_VECTOR (31 downto 0);
    signal queries_0_load_2_reg_353 : STD_LOGIC_VECTOR (31 downto 0);
    signal queries_1_load_2_reg_358 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_1_reg_363 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal empty_10_fu_243_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_10_reg_371 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln11_fu_201_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_11_fu_248_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_11_reg_376 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_12_fu_253_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_12_reg_381 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_score_matrix_Pipeline_LOOP2_fu_172_ap_start : STD_LOGIC;
    signal grp_score_matrix_Pipeline_LOOP2_fu_172_ap_done : STD_LOGIC;
    signal grp_score_matrix_Pipeline_LOOP2_fu_172_ap_idle : STD_LOGIC;
    signal grp_score_matrix_Pipeline_LOOP2_fu_172_ap_ready : STD_LOGIC;
    signal grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_0_ce0 : STD_LOGIC;
    signal grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_0_we0 : STD_LOGIC;
    signal grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_0_ce0 : STD_LOGIC;
    signal grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_1_ce0 : STD_LOGIC;
    signal grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_2_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_2_ce0 : STD_LOGIC;
    signal grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_1_ce0 : STD_LOGIC;
    signal grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_1_we0 : STD_LOGIC;
    signal grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_2_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_2_ce0 : STD_LOGIC;
    signal grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_2_we0 : STD_LOGIC;
    signal grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_score_matrix_Pipeline_LOOP2_fu_172_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal m_fu_60 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln11_fu_207_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_in2_fu_213_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_in1_fu_223_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_in_fu_233_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component score_matrix_score_matrix_Pipeline_LOOP2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        score_m_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        score_m_0_ce0 : OUT STD_LOGIC;
        score_m_0_we0 : OUT STD_LOGIC;
        score_m_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        keys_t_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        keys_t_0_ce0 : OUT STD_LOGIC;
        keys_t_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        empty_4 : IN STD_LOGIC_VECTOR (31 downto 0);
        keys_t_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        keys_t_1_ce0 : OUT STD_LOGIC;
        keys_t_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        empty_5 : IN STD_LOGIC_VECTOR (31 downto 0);
        keys_t_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        keys_t_2_ce0 : OUT STD_LOGIC;
        keys_t_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        empty : IN STD_LOGIC_VECTOR (31 downto 0);
        m : IN STD_LOGIC_VECTOR (1 downto 0);
        score_m_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        score_m_1_ce0 : OUT STD_LOGIC;
        score_m_1_we0 : OUT STD_LOGIC;
        score_m_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        score_m_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        score_m_2_ce0 : OUT STD_LOGIC;
        score_m_2_we0 : OUT STD_LOGIC;
        score_m_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component score_matrix_mux_42_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_score_matrix_Pipeline_LOOP2_fu_172 : component score_matrix_score_matrix_Pipeline_LOOP2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_score_matrix_Pipeline_LOOP2_fu_172_ap_start,
        ap_done => grp_score_matrix_Pipeline_LOOP2_fu_172_ap_done,
        ap_idle => grp_score_matrix_Pipeline_LOOP2_fu_172_ap_idle,
        ap_ready => grp_score_matrix_Pipeline_LOOP2_fu_172_ap_ready,
        score_m_0_address0 => grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_0_address0,
        score_m_0_ce0 => grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_0_ce0,
        score_m_0_we0 => grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_0_we0,
        score_m_0_d0 => grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_0_d0,
        keys_t_0_address0 => grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_0_address0,
        keys_t_0_ce0 => grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_0_ce0,
        keys_t_0_q0 => keys_t_0_q0,
        empty_4 => empty_11_reg_376,
        keys_t_1_address0 => grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_1_address0,
        keys_t_1_ce0 => grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_1_ce0,
        keys_t_1_q0 => keys_t_1_q0,
        empty_5 => empty_12_reg_381,
        keys_t_2_address0 => grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_2_address0,
        keys_t_2_ce0 => grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_2_ce0,
        keys_t_2_q0 => keys_t_2_q0,
        empty => empty_10_reg_371,
        m => m_1_reg_363,
        score_m_1_address0 => grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_1_address0,
        score_m_1_ce0 => grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_1_ce0,
        score_m_1_we0 => grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_1_we0,
        score_m_1_d0 => grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_1_d0,
        score_m_2_address0 => grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_2_address0,
        score_m_2_ce0 => grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_2_ce0,
        score_m_2_we0 => grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_2_we0,
        score_m_2_d0 => grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_2_d0);

    mux_42_32_1_1_U19 : component score_matrix_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => queries_0_load_2_reg_353,
        din1 => queries_1_load_2_reg_358,
        din2 => queries_2_load_2_reg_347,
        din3 => queries_2_load_2_reg_347,
        din4 => m_fu_60,
        dout => p_in2_fu_213_p6);

    mux_42_32_1_1_U20 : component score_matrix_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => queries_0_load_reg_291,
        din1 => queries_1_load_reg_296,
        din2 => queries_2_load_reg_285,
        din3 => queries_2_load_reg_285,
        din4 => m_fu_60,
        dout => p_in1_fu_223_p6);

    mux_42_32_1_1_U21 : component score_matrix_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => queries_0_load_1_reg_337,
        din1 => queries_1_load_1_reg_342,
        din2 => queries_2_load_1_reg_331,
        din3 => queries_2_load_1_reg_331,
        din4 => m_fu_60,
        dout => p_in_fu_233_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_score_matrix_Pipeline_LOOP2_fu_172_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_score_matrix_Pipeline_LOOP2_fu_172_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln11_fu_201_p2 = ap_const_lv1_0))) then 
                    grp_score_matrix_Pipeline_LOOP2_fu_172_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_score_matrix_Pipeline_LOOP2_fu_172_ap_ready = ap_const_logic_1)) then 
                    grp_score_matrix_Pipeline_LOOP2_fu_172_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    m_fu_60_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                m_fu_60 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln11_fu_201_p2 = ap_const_lv1_0))) then 
                m_fu_60 <= add_ln11_fu_207_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln11_fu_201_p2 = ap_const_lv1_0))) then
                empty_10_reg_371 <= empty_10_fu_243_p1;
                empty_11_reg_376 <= empty_11_fu_248_p1;
                empty_12_reg_381 <= empty_12_fu_253_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                m_1_reg_363 <= m_fu_60;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                queries_0_load_1_reg_337 <= queries_0_q1;
                queries_0_load_2_reg_353 <= queries_0_q0;
                queries_1_load_1_reg_342 <= queries_1_q1;
                queries_1_load_2_reg_358 <= queries_1_q0;
                queries_2_load_1_reg_331 <= queries_2_q1;
                queries_2_load_2_reg_347 <= queries_2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                queries_0_load_reg_291 <= queries_0_q0;
                queries_1_load_reg_296 <= queries_1_q0;
                queries_2_load_reg_285 <= queries_2_q0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, icmp_ln11_fu_201_p2, grp_score_matrix_Pipeline_LOOP2_fu_172_ap_done, ap_CS_fsm_state5)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln11_fu_201_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_score_matrix_Pipeline_LOOP2_fu_172_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    add_ln11_fu_207_p2 <= std_logic_vector(unsigned(m_fu_60) + unsigned(ap_const_lv2_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_score_matrix_Pipeline_LOOP2_fu_172_ap_done)
    begin
        if ((grp_score_matrix_Pipeline_LOOP2_fu_172_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state4, icmp_ln11_fu_201_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln11_fu_201_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4, icmp_ln11_fu_201_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln11_fu_201_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_10_fu_243_p1 <= p_in2_fu_213_p6;
    empty_11_fu_248_p1 <= p_in1_fu_223_p6;
    empty_12_fu_253_p1 <= p_in_fu_233_p6;
    grp_score_matrix_Pipeline_LOOP2_fu_172_ap_start <= grp_score_matrix_Pipeline_LOOP2_fu_172_ap_start_reg;
    icmp_ln11_fu_201_p2 <= "1" when (m_fu_60 = ap_const_lv2_3) else "0";
    keys_t_0_address0 <= grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_0_address0;
    keys_t_0_ce0 <= grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_0_ce0;
    keys_t_1_address0 <= grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_1_address0;
    keys_t_1_ce0 <= grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_1_ce0;
    keys_t_2_address0 <= grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_2_address0;
    keys_t_2_ce0 <= grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_2_ce0;

    queries_0_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            queries_0_address0 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            queries_0_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            queries_0_address0 <= "XX";
        end if; 
    end process;

    queries_0_address1 <= ap_const_lv64_1(2 - 1 downto 0);

    queries_0_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            queries_0_ce0 <= ap_const_logic_1;
        else 
            queries_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    queries_0_ce1_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            queries_0_ce1 <= ap_const_logic_1;
        else 
            queries_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    queries_1_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            queries_1_address0 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            queries_1_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            queries_1_address0 <= "XX";
        end if; 
    end process;

    queries_1_address1 <= ap_const_lv64_1(2 - 1 downto 0);

    queries_1_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            queries_1_ce0 <= ap_const_logic_1;
        else 
            queries_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    queries_1_ce1_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            queries_1_ce1 <= ap_const_logic_1;
        else 
            queries_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    queries_2_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            queries_2_address0 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            queries_2_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            queries_2_address0 <= "XX";
        end if; 
    end process;

    queries_2_address1 <= ap_const_lv64_1(2 - 1 downto 0);

    queries_2_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            queries_2_ce0 <= ap_const_logic_1;
        else 
            queries_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    queries_2_ce1_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            queries_2_ce1 <= ap_const_logic_1;
        else 
            queries_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    score_m_0_address0 <= grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_0_address0;
    score_m_0_ce0 <= grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_0_ce0;
    score_m_0_d0 <= grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_0_d0;
    score_m_0_we0 <= grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_0_we0;
    score_m_1_address0 <= grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_1_address0;
    score_m_1_ce0 <= grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_1_ce0;
    score_m_1_d0 <= grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_1_d0;
    score_m_1_we0 <= grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_1_we0;
    score_m_2_address0 <= grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_2_address0;
    score_m_2_ce0 <= grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_2_ce0;
    score_m_2_d0 <= grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_2_d0;
    score_m_2_we0 <= grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_2_we0;
end behav;
