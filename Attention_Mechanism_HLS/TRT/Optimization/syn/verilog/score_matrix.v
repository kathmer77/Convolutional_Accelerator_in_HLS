// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="score_matrix_score_matrix,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu11p-flga2577-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.297000,HLS_SYN_LAT=57,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1594,HLS_SYN_LUT=1164,HLS_VERSION=2021_1}" *)

module score_matrix (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        score_m_0_address0,
        score_m_0_ce0,
        score_m_0_we0,
        score_m_0_d0,
        score_m_1_address0,
        score_m_1_ce0,
        score_m_1_we0,
        score_m_1_d0,
        score_m_2_address0,
        score_m_2_ce0,
        score_m_2_we0,
        score_m_2_d0,
        queries_0_address0,
        queries_0_ce0,
        queries_0_q0,
        queries_0_address1,
        queries_0_ce1,
        queries_0_q1,
        queries_1_address0,
        queries_1_ce0,
        queries_1_q0,
        queries_1_address1,
        queries_1_ce1,
        queries_1_q1,
        queries_2_address0,
        queries_2_ce0,
        queries_2_q0,
        queries_2_address1,
        queries_2_ce1,
        queries_2_q1,
        keys_t_0_address0,
        keys_t_0_ce0,
        keys_t_0_q0,
        keys_t_1_address0,
        keys_t_1_ce0,
        keys_t_1_q0,
        keys_t_2_address0,
        keys_t_2_ce0,
        keys_t_2_q0
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [1:0] score_m_0_address0;
output   score_m_0_ce0;
output   score_m_0_we0;
output  [31:0] score_m_0_d0;
output  [1:0] score_m_1_address0;
output   score_m_1_ce0;
output   score_m_1_we0;
output  [31:0] score_m_1_d0;
output  [1:0] score_m_2_address0;
output   score_m_2_ce0;
output   score_m_2_we0;
output  [31:0] score_m_2_d0;
output  [1:0] queries_0_address0;
output   queries_0_ce0;
input  [31:0] queries_0_q0;
output  [1:0] queries_0_address1;
output   queries_0_ce1;
input  [31:0] queries_0_q1;
output  [1:0] queries_1_address0;
output   queries_1_ce0;
input  [31:0] queries_1_q0;
output  [1:0] queries_1_address1;
output   queries_1_ce1;
input  [31:0] queries_1_q1;
output  [1:0] queries_2_address0;
output   queries_2_ce0;
input  [31:0] queries_2_q0;
output  [1:0] queries_2_address1;
output   queries_2_ce1;
input  [31:0] queries_2_q1;
output  [1:0] keys_t_0_address0;
output   keys_t_0_ce0;
input  [31:0] keys_t_0_q0;
output  [1:0] keys_t_1_address0;
output   keys_t_1_ce0;
input  [31:0] keys_t_1_q0;
output  [1:0] keys_t_2_address0;
output   keys_t_2_ce0;
input  [31:0] keys_t_2_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[1:0] queries_0_address0;
reg queries_0_ce0;
reg queries_0_ce1;
reg[1:0] queries_1_address0;
reg queries_1_ce0;
reg queries_1_ce1;
reg[1:0] queries_2_address0;
reg queries_2_ce0;
reg queries_2_ce1;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] queries_2_load_reg_285;
wire    ap_CS_fsm_state2;
reg   [31:0] queries_0_load_reg_291;
reg   [31:0] queries_1_load_reg_296;
reg   [31:0] queries_2_load_1_reg_331;
wire    ap_CS_fsm_state3;
reg   [31:0] queries_0_load_1_reg_337;
reg   [31:0] queries_1_load_1_reg_342;
reg   [31:0] queries_2_load_2_reg_347;
reg   [31:0] queries_0_load_2_reg_353;
reg   [31:0] queries_1_load_2_reg_358;
reg   [1:0] m_1_reg_363;
wire    ap_CS_fsm_state4;
wire   [31:0] empty_10_fu_243_p1;
reg   [31:0] empty_10_reg_371;
wire   [0:0] icmp_ln11_fu_201_p2;
wire   [31:0] empty_11_fu_248_p1;
reg   [31:0] empty_11_reg_376;
wire   [31:0] empty_12_fu_253_p1;
reg   [31:0] empty_12_reg_381;
wire    grp_score_matrix_Pipeline_LOOP2_fu_172_ap_start;
wire    grp_score_matrix_Pipeline_LOOP2_fu_172_ap_done;
wire    grp_score_matrix_Pipeline_LOOP2_fu_172_ap_idle;
wire    grp_score_matrix_Pipeline_LOOP2_fu_172_ap_ready;
wire   [1:0] grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_0_address0;
wire    grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_0_ce0;
wire    grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_0_we0;
wire   [31:0] grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_0_d0;
wire   [1:0] grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_0_address0;
wire    grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_0_ce0;
wire   [1:0] grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_1_address0;
wire    grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_1_ce0;
wire   [1:0] grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_2_address0;
wire    grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_2_ce0;
wire   [1:0] grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_1_address0;
wire    grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_1_ce0;
wire    grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_1_we0;
wire   [31:0] grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_1_d0;
wire   [1:0] grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_2_address0;
wire    grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_2_ce0;
wire    grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_2_we0;
wire   [31:0] grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_2_d0;
reg    grp_score_matrix_Pipeline_LOOP2_fu_172_ap_start_reg;
wire    ap_CS_fsm_state5;
reg   [1:0] m_fu_60;
wire   [1:0] add_ln11_fu_207_p2;
wire   [31:0] p_in2_fu_213_p6;
wire   [31:0] p_in1_fu_223_p6;
wire   [31:0] p_in_fu_233_p6;
reg   [4:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 grp_score_matrix_Pipeline_LOOP2_fu_172_ap_start_reg = 1'b0;
end

score_matrix_score_matrix_Pipeline_LOOP2 grp_score_matrix_Pipeline_LOOP2_fu_172(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_score_matrix_Pipeline_LOOP2_fu_172_ap_start),
    .ap_done(grp_score_matrix_Pipeline_LOOP2_fu_172_ap_done),
    .ap_idle(grp_score_matrix_Pipeline_LOOP2_fu_172_ap_idle),
    .ap_ready(grp_score_matrix_Pipeline_LOOP2_fu_172_ap_ready),
    .score_m_0_address0(grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_0_address0),
    .score_m_0_ce0(grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_0_ce0),
    .score_m_0_we0(grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_0_we0),
    .score_m_0_d0(grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_0_d0),
    .keys_t_0_address0(grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_0_address0),
    .keys_t_0_ce0(grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_0_ce0),
    .keys_t_0_q0(keys_t_0_q0),
    .empty_4(empty_11_reg_376),
    .keys_t_1_address0(grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_1_address0),
    .keys_t_1_ce0(grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_1_ce0),
    .keys_t_1_q0(keys_t_1_q0),
    .empty_5(empty_12_reg_381),
    .keys_t_2_address0(grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_2_address0),
    .keys_t_2_ce0(grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_2_ce0),
    .keys_t_2_q0(keys_t_2_q0),
    .empty(empty_10_reg_371),
    .m(m_1_reg_363),
    .score_m_1_address0(grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_1_address0),
    .score_m_1_ce0(grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_1_ce0),
    .score_m_1_we0(grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_1_we0),
    .score_m_1_d0(grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_1_d0),
    .score_m_2_address0(grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_2_address0),
    .score_m_2_ce0(grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_2_ce0),
    .score_m_2_we0(grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_2_we0),
    .score_m_2_d0(grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_2_d0)
);

score_matrix_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U19(
    .din0(queries_0_load_2_reg_353),
    .din1(queries_1_load_2_reg_358),
    .din2(queries_2_load_2_reg_347),
    .din3(queries_2_load_2_reg_347),
    .din4(m_fu_60),
    .dout(p_in2_fu_213_p6)
);

score_matrix_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U20(
    .din0(queries_0_load_reg_291),
    .din1(queries_1_load_reg_296),
    .din2(queries_2_load_reg_285),
    .din3(queries_2_load_reg_285),
    .din4(m_fu_60),
    .dout(p_in1_fu_223_p6)
);

score_matrix_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U21(
    .din0(queries_0_load_1_reg_337),
    .din1(queries_1_load_1_reg_342),
    .din2(queries_2_load_1_reg_331),
    .din3(queries_2_load_1_reg_331),
    .din4(m_fu_60),
    .dout(p_in_fu_233_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_score_matrix_Pipeline_LOOP2_fu_172_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln11_fu_201_p2 == 1'd0))) begin
            grp_score_matrix_Pipeline_LOOP2_fu_172_ap_start_reg <= 1'b1;
        end else if ((grp_score_matrix_Pipeline_LOOP2_fu_172_ap_ready == 1'b1)) begin
            grp_score_matrix_Pipeline_LOOP2_fu_172_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        m_fu_60 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln11_fu_201_p2 == 1'd0))) begin
        m_fu_60 <= add_ln11_fu_207_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln11_fu_201_p2 == 1'd0))) begin
        empty_10_reg_371 <= empty_10_fu_243_p1;
        empty_11_reg_376 <= empty_11_fu_248_p1;
        empty_12_reg_381 <= empty_12_fu_253_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        m_1_reg_363 <= m_fu_60;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        queries_0_load_1_reg_337 <= queries_0_q1;
        queries_0_load_2_reg_353 <= queries_0_q0;
        queries_1_load_1_reg_342 <= queries_1_q1;
        queries_1_load_2_reg_358 <= queries_1_q0;
        queries_2_load_1_reg_331 <= queries_2_q1;
        queries_2_load_2_reg_347 <= queries_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        queries_0_load_reg_291 <= queries_0_q0;
        queries_1_load_reg_296 <= queries_1_q0;
        queries_2_load_reg_285 <= queries_2_q0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_score_matrix_Pipeline_LOOP2_fu_172_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln11_fu_201_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln11_fu_201_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        queries_0_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        queries_0_address0 = 64'd0;
    end else begin
        queries_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        queries_0_ce0 = 1'b1;
    end else begin
        queries_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        queries_0_ce1 = 1'b1;
    end else begin
        queries_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        queries_1_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        queries_1_address0 = 64'd0;
    end else begin
        queries_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        queries_1_ce0 = 1'b1;
    end else begin
        queries_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        queries_1_ce1 = 1'b1;
    end else begin
        queries_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        queries_2_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        queries_2_address0 = 64'd0;
    end else begin
        queries_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        queries_2_ce0 = 1'b1;
    end else begin
        queries_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        queries_2_ce1 = 1'b1;
    end else begin
        queries_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln11_fu_201_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (grp_score_matrix_Pipeline_LOOP2_fu_172_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln11_fu_207_p2 = (m_fu_60 + 2'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign empty_10_fu_243_p1 = p_in2_fu_213_p6;

assign empty_11_fu_248_p1 = p_in1_fu_223_p6;

assign empty_12_fu_253_p1 = p_in_fu_233_p6;

assign grp_score_matrix_Pipeline_LOOP2_fu_172_ap_start = grp_score_matrix_Pipeline_LOOP2_fu_172_ap_start_reg;

assign icmp_ln11_fu_201_p2 = ((m_fu_60 == 2'd3) ? 1'b1 : 1'b0);

assign keys_t_0_address0 = grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_0_address0;

assign keys_t_0_ce0 = grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_0_ce0;

assign keys_t_1_address0 = grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_1_address0;

assign keys_t_1_ce0 = grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_1_ce0;

assign keys_t_2_address0 = grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_2_address0;

assign keys_t_2_ce0 = grp_score_matrix_Pipeline_LOOP2_fu_172_keys_t_2_ce0;

assign queries_0_address1 = 64'd1;

assign queries_1_address1 = 64'd1;

assign queries_2_address1 = 64'd1;

assign score_m_0_address0 = grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_0_address0;

assign score_m_0_ce0 = grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_0_ce0;

assign score_m_0_d0 = grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_0_d0;

assign score_m_0_we0 = grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_0_we0;

assign score_m_1_address0 = grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_1_address0;

assign score_m_1_ce0 = grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_1_ce0;

assign score_m_1_d0 = grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_1_d0;

assign score_m_1_we0 = grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_1_we0;

assign score_m_2_address0 = grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_2_address0;

assign score_m_2_ce0 = grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_2_ce0;

assign score_m_2_d0 = grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_2_d0;

assign score_m_2_we0 = grp_score_matrix_Pipeline_LOOP2_fu_172_score_m_2_we0;

endmodule //score_matrix
