// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="score_matrix_score_matrix,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu11p-flga2577-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.297000,HLS_SYN_LAT=61,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1551,HLS_SYN_LUT=1501,HLS_VERSION=2021_1}" *)

module score_matrix (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        score_m_address0,
        score_m_ce0,
        score_m_we0,
        score_m_d0,
        queries_address0,
        queries_ce0,
        queries_q0,
        queries_address1,
        queries_ce1,
        queries_q1,
        keys_t_address0,
        keys_t_ce0,
        keys_t_q0,
        keys_t_address1,
        keys_t_ce1,
        keys_t_q1
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] score_m_address0;
output   score_m_ce0;
output   score_m_we0;
output  [31:0] score_m_d0;
output  [4:0] queries_address0;
output   queries_ce0;
input  [31:0] queries_q0;
output  [4:0] queries_address1;
output   queries_ce1;
input  [31:0] queries_q1;
output  [4:0] keys_t_address0;
output   keys_t_ce0;
input  [31:0] keys_t_q0;
output  [4:0] keys_t_address1;
output   keys_t_ce1;
input  [31:0] keys_t_q1;

reg ap_idle;
reg score_m_ce0;
reg score_m_we0;
reg[4:0] queries_address0;
reg queries_ce0;
reg[4:0] queries_address1;
reg queries_ce1;
reg[4:0] keys_t_address0;
reg keys_t_ce0;
reg[4:0] keys_t_address1;
reg keys_t_ce1;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state8_pp0_stage3_iter1;
wire    ap_block_state12_pp0_stage3_iter2;
wire    ap_block_state16_pp0_stage3_iter3;
wire    ap_block_state20_pp0_stage3_iter4;
wire    ap_block_state24_pp0_stage3_iter5;
wire    ap_block_state28_pp0_stage3_iter6;
wire    ap_block_pp0_stage3_subdone;
reg   [0:0] icmp_ln13_reg_713;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [31:0] grp_fu_262_p2;
reg   [31:0] reg_284;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state7_pp0_stage2_iter1;
wire    ap_block_state11_pp0_stage2_iter2;
wire    ap_block_state15_pp0_stage2_iter3;
wire    ap_block_state19_pp0_stage2_iter4;
wire    ap_block_state23_pp0_stage2_iter5;
wire    ap_block_state27_pp0_stage2_iter6;
wire    ap_block_pp0_stage2_11001;
wire   [4:0] tmp_fu_310_p3;
reg   [4:0] tmp_reg_705;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
wire    ap_block_state13_pp0_stage0_iter3;
wire    ap_block_state17_pp0_stage0_iter4;
wire    ap_block_state21_pp0_stage0_iter5;
wire    ap_block_state25_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln13_fu_320_p2;
wire   [0:0] icmp_ln14_fu_341_p2;
reg   [0:0] icmp_ln14_reg_717;
wire   [1:0] select_ln13_fu_349_p3;
reg   [1:0] select_ln13_reg_725;
wire   [4:0] tmp_8_fu_357_p3;
reg   [4:0] tmp_8_reg_732;
wire   [1:0] select_ln13_1_fu_367_p3;
reg   [1:0] select_ln13_1_reg_740;
wire   [31:0] bitcast_ln13_fu_448_p1;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_state10_pp0_stage1_iter2;
wire    ap_block_state14_pp0_stage1_iter3;
wire    ap_block_state18_pp0_stage1_iter4;
wire    ap_block_state22_pp0_stage1_iter5;
wire    ap_block_state26_pp0_stage1_iter6;
wire    ap_block_pp0_stage1_11001;
wire   [31:0] bitcast_ln13_1_fu_453_p1;
wire   [3:0] add_ln21_fu_483_p2;
reg   [3:0] add_ln21_reg_786;
reg   [3:0] add_ln21_reg_786_pp0_iter1_reg;
reg   [3:0] add_ln21_reg_786_pp0_iter2_reg;
reg   [3:0] add_ln21_reg_786_pp0_iter3_reg;
reg   [3:0] add_ln21_reg_786_pp0_iter4_reg;
reg   [3:0] add_ln21_reg_786_pp0_iter5_reg;
reg   [3:0] add_ln21_reg_786_pp0_iter6_reg;
wire   [31:0] bitcast_ln21_fu_511_p1;
wire   [31:0] bitcast_ln21_1_fu_516_p1;
wire   [31:0] bitcast_ln13_2_fu_521_p1;
wire   [31:0] bitcast_ln13_3_fu_526_p1;
wire   [4:0] select_ln13_15_fu_553_p3;
reg   [4:0] select_ln13_15_reg_831;
wire   [4:0] select_ln13_16_fu_558_p3;
reg   [4:0] select_ln13_16_reg_836;
wire   [4:0] zext_ln21_1_fu_563_p1;
reg   [4:0] zext_ln21_1_reg_841;
wire   [31:0] grp_fu_266_p2;
reg   [31:0] mul_reg_857;
wire   [31:0] grp_fu_270_p2;
reg   [31:0] mul_1_reg_862;
wire   [31:0] bitcast_ln21_2_fu_585_p1;
wire   [31:0] bitcast_ln21_3_fu_590_p1;
wire   [31:0] bitcast_ln13_4_fu_595_p1;
wire   [31:0] bitcast_ln13_5_fu_600_p1;
reg   [31:0] mul_2_reg_907;
reg   [31:0] mul_2_reg_907_pp0_iter1_reg;
reg   [31:0] mul_3_reg_912;
reg   [31:0] mul_3_reg_912_pp0_iter1_reg;
reg   [31:0] mul_3_reg_912_pp0_iter2_reg;
wire   [31:0] bitcast_ln21_4_fu_645_p1;
wire   [31:0] bitcast_ln21_5_fu_650_p1;
wire   [31:0] bitcast_ln13_6_fu_655_p1;
wire   [31:0] bitcast_ln13_7_fu_660_p1;
reg   [31:0] mul_4_reg_937;
reg   [31:0] mul_4_reg_937_pp0_iter2_reg;
reg   [31:0] mul_4_reg_937_pp0_iter3_reg;
reg   [31:0] mul_5_reg_942;
reg   [31:0] mul_5_reg_942_pp0_iter2_reg;
reg   [31:0] mul_5_reg_942_pp0_iter3_reg;
reg   [31:0] mul_5_reg_942_pp0_iter4_reg;
wire   [31:0] bitcast_ln21_6_fu_665_p1;
wire   [31:0] bitcast_ln21_7_fu_670_p1;
wire   [31:0] grp_fu_257_p2;
reg   [31:0] add_reg_957;
reg   [31:0] mul_6_reg_962;
reg   [31:0] mul_6_reg_962_pp0_iter2_reg;
reg   [31:0] mul_6_reg_962_pp0_iter3_reg;
reg   [31:0] mul_6_reg_962_pp0_iter4_reg;
reg   [31:0] mul_7_reg_967;
reg   [31:0] mul_7_reg_967_pp0_iter2_reg;
reg   [31:0] mul_7_reg_967_pp0_iter3_reg;
reg   [31:0] mul_7_reg_967_pp0_iter4_reg;
reg   [31:0] mul_7_reg_967_pp0_iter5_reg;
reg   [31:0] add_1_reg_972;
reg   [31:0] add_2_reg_977;
reg   [31:0] add_3_reg_982;
reg   [31:0] add_4_reg_987;
reg   [31:0] add_5_reg_992;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln13_fu_375_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] select_ln13_3_cast_fu_386_p1;
wire   [63:0] zext_ln14_fu_391_p1;
wire   [63:0] zext_ln21_5_fu_406_p1;
wire   [63:0] select_ln13_4_cast_fu_464_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] select_ln13_5_cast_fu_475_p1;
wire   [63:0] zext_ln21_6_fu_495_p1;
wire   [63:0] zext_ln21_7_fu_506_p1;
wire   [63:0] select_ln13_6_cast_fu_537_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] select_ln13_7_cast_fu_548_p1;
wire   [63:0] tmp_s_fu_566_p3;
wire   [63:0] zext_ln21_8_fu_580_p1;
wire   [63:0] select_ln13_8_cast_fu_610_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] select_ln13_9_cast_fu_620_p1;
wire   [63:0] zext_ln21_9_fu_630_p1;
wire   [63:0] zext_ln21_10_fu_640_p1;
wire   [63:0] zext_ln21_4_fu_675_p1;
reg   [1:0] o_fu_86;
wire    ap_loop_init;
reg   [1:0] ap_sig_allocacmp_o_load;
wire   [1:0] add_ln14_fu_411_p2;
reg   [1:0] m_fu_90;
reg   [1:0] ap_sig_allocacmp_m_1;
reg   [3:0] indvar_flatten_fu_94;
reg   [3:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [3:0] add_ln13_1_fu_326_p2;
reg   [31:0] grp_fu_257_p0;
reg   [31:0] grp_fu_257_p1;
reg   [31:0] grp_fu_262_p0;
reg   [31:0] grp_fu_262_p1;
reg   [31:0] grp_fu_266_p0;
reg   [31:0] grp_fu_266_p1;
reg   [31:0] grp_fu_270_p0;
reg   [31:0] grp_fu_270_p1;
reg   [0:0] grp_fu_274_p0;
reg   [4:0] grp_fu_274_p1;
reg   [4:0] grp_fu_274_p2;
reg   [0:0] grp_fu_279_p0;
reg   [4:0] grp_fu_279_p1;
reg   [4:0] grp_fu_279_p2;
wire   [1:0] add_ln13_fu_335_p2;
wire   [4:0] grp_fu_274_p3;
wire   [4:0] grp_fu_279_p3;
wire   [4:0] or_ln13_fu_380_p2;
wire   [2:0] zext_ln21_2_fu_396_p1;
wire   [2:0] add_ln21_1_fu_400_p2;
wire   [3:0] p_shl_cast_fu_435_p3;
wire   [3:0] zext_ln21_fu_432_p1;
wire   [4:0] or_ln13_1_fu_458_p2;
wire   [4:0] or_ln13_2_fu_469_p2;
wire   [3:0] sub_ln21_fu_442_p2;
wire   [3:0] zext_ln21_3_fu_480_p1;
wire   [3:0] add_ln21_2_fu_489_p2;
wire   [3:0] add_ln21_3_fu_500_p2;
wire   [4:0] or_ln13_3_fu_531_p2;
wire   [4:0] or_ln13_4_fu_542_p2;
wire   [4:0] add_ln21_4_fu_574_p2;
wire   [4:0] or_ln13_5_fu_605_p2;
wire   [4:0] or_ln13_6_fu_615_p2;
wire   [4:0] add_ln21_5_fu_625_p2;
wire   [4:0] add_ln21_6_fu_635_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg   [3:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to6;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_374;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

score_matrix_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_257_p0),
    .din1(grp_fu_257_p1),
    .ce(1'b1),
    .dout(grp_fu_257_p2)
);

score_matrix_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_262_p0),
    .din1(grp_fu_262_p1),
    .ce(1'b1),
    .dout(grp_fu_262_p2)
);

score_matrix_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_266_p0),
    .din1(grp_fu_266_p1),
    .ce(1'b1),
    .dout(grp_fu_266_p2)
);

score_matrix_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_270_p0),
    .din1(grp_fu_270_p1),
    .ce(1'b1),
    .dout(grp_fu_270_p2)
);

score_matrix_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(1'b1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_374)) begin
        if ((icmp_ln13_fu_320_p2 == 1'd0)) begin
            indvar_flatten_fu_94 <= add_ln13_1_fu_326_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_94 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_374)) begin
        if ((icmp_ln13_fu_320_p2 == 1'd0)) begin
            m_fu_90 <= select_ln13_1_fu_367_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            m_fu_90 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_374)) begin
        if ((icmp_ln13_fu_320_p2 == 1'd0)) begin
            o_fu_86 <= add_ln14_fu_411_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            o_fu_86 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_1_reg_972 <= grp_fu_257_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_2_reg_977 <= grp_fu_257_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_3_reg_982 <= grp_fu_257_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_4_reg_987 <= grp_fu_262_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_5_reg_992 <= grp_fu_262_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_reg_713 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln21_reg_786 <= add_ln21_fu_483_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln21_reg_786_pp0_iter1_reg <= add_ln21_reg_786;
        add_ln21_reg_786_pp0_iter2_reg <= add_ln21_reg_786_pp0_iter1_reg;
        add_ln21_reg_786_pp0_iter3_reg <= add_ln21_reg_786_pp0_iter2_reg;
        add_ln21_reg_786_pp0_iter4_reg <= add_ln21_reg_786_pp0_iter3_reg;
        add_ln21_reg_786_pp0_iter5_reg <= add_ln21_reg_786_pp0_iter4_reg;
        add_ln21_reg_786_pp0_iter6_reg <= add_ln21_reg_786_pp0_iter5_reg;
        mul_6_reg_962_pp0_iter2_reg <= mul_6_reg_962;
        mul_6_reg_962_pp0_iter3_reg <= mul_6_reg_962_pp0_iter2_reg;
        mul_6_reg_962_pp0_iter4_reg <= mul_6_reg_962_pp0_iter3_reg;
        mul_7_reg_967_pp0_iter2_reg <= mul_7_reg_967;
        mul_7_reg_967_pp0_iter3_reg <= mul_7_reg_967_pp0_iter2_reg;
        mul_7_reg_967_pp0_iter4_reg <= mul_7_reg_967_pp0_iter3_reg;
        mul_7_reg_967_pp0_iter5_reg <= mul_7_reg_967_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_reg_957 <= grp_fu_257_p2;
        mul_6_reg_962 <= grp_fu_266_p2;
        mul_7_reg_967 <= grp_fu_270_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        mul_2_reg_907_pp0_iter1_reg <= mul_2_reg_907;
        mul_3_reg_912_pp0_iter1_reg <= mul_3_reg_912;
        mul_3_reg_912_pp0_iter2_reg <= mul_3_reg_912_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln13_reg_713 <= icmp_ln13_fu_320_p2;
        mul_4_reg_937_pp0_iter2_reg <= mul_4_reg_937;
        mul_4_reg_937_pp0_iter3_reg <= mul_4_reg_937_pp0_iter2_reg;
        mul_5_reg_942_pp0_iter2_reg <= mul_5_reg_942;
        mul_5_reg_942_pp0_iter3_reg <= mul_5_reg_942_pp0_iter2_reg;
        mul_5_reg_942_pp0_iter4_reg <= mul_5_reg_942_pp0_iter3_reg;
        tmp_reg_705[4 : 3] <= tmp_fu_310_p3[4 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln13_fu_320_p2 == 1'd0))) begin
        icmp_ln14_reg_717 <= icmp_ln14_fu_341_p2;
        select_ln13_1_reg_740 <= select_ln13_1_fu_367_p3;
        select_ln13_reg_725 <= select_ln13_fu_349_p3;
        tmp_8_reg_732[4 : 3] <= tmp_8_fu_357_p3[4 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_reg_713 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_1_reg_862 <= grp_fu_270_p2;
        mul_reg_857 <= grp_fu_266_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_reg_713 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_2_reg_907 <= grp_fu_266_p2;
        mul_3_reg_912 <= grp_fu_270_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_4_reg_937 <= grp_fu_266_p2;
        mul_5_reg_942 <= grp_fu_270_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_284 <= grp_fu_262_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_reg_713 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        select_ln13_15_reg_831[4 : 3] <= select_ln13_15_fu_553_p3[4 : 3];
        select_ln13_16_reg_836[4 : 3] <= select_ln13_16_fu_558_p3[4 : 3];
        zext_ln21_1_reg_841[1 : 0] <= zext_ln21_1_fu_563_p1[1 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln13_reg_713 == 1'd1) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to6 = 1'b1;
    end else begin
        ap_idle_pp0_1to6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 4'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_94;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_m_1 = 2'd0;
    end else begin
        ap_sig_allocacmp_m_1 = m_fu_90;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_o_load = 2'd0;
    end else begin
        ap_sig_allocacmp_o_load = o_fu_86;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_257_p0 = add_2_reg_977;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_257_p0 = add_1_reg_972;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_257_p0 = add_reg_957;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_257_p0 = mul_reg_857;
    end else begin
        grp_fu_257_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_257_p1 = mul_3_reg_912_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_257_p1 = mul_2_reg_907_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_257_p1 = mul_1_reg_862;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_257_p1 = 32'd0;
    end else begin
        grp_fu_257_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_262_p0 = reg_284;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_262_p0 = add_5_reg_992;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_262_p0 = add_4_reg_987;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_262_p0 = add_3_reg_982;
    end else begin
        grp_fu_262_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_262_p1 = mul_7_reg_967_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_262_p1 = mul_6_reg_962_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_262_p1 = mul_5_reg_942_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_262_p1 = mul_4_reg_937_pp0_iter3_reg;
    end else begin
        grp_fu_262_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_266_p0 = bitcast_ln13_6_fu_655_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_266_p0 = bitcast_ln13_4_fu_595_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_266_p0 = bitcast_ln13_2_fu_521_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_266_p0 = bitcast_ln13_fu_448_p1;
    end else begin
        grp_fu_266_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_266_p1 = bitcast_ln21_6_fu_665_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_266_p1 = bitcast_ln21_4_fu_645_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_266_p1 = bitcast_ln21_2_fu_585_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_266_p1 = bitcast_ln21_fu_511_p1;
    end else begin
        grp_fu_266_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_270_p0 = bitcast_ln13_7_fu_660_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_270_p0 = bitcast_ln13_5_fu_600_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_270_p0 = bitcast_ln13_3_fu_526_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_270_p0 = bitcast_ln13_1_fu_453_p1;
    end else begin
        grp_fu_270_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_270_p1 = bitcast_ln21_7_fu_670_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_270_p1 = bitcast_ln21_5_fu_650_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_270_p1 = bitcast_ln21_3_fu_590_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_270_p1 = bitcast_ln21_1_fu_516_p1;
    end else begin
        grp_fu_270_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_274_p0 = icmp_ln14_reg_717;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_274_p0 = icmp_ln14_fu_341_p2;
    end else begin
        grp_fu_274_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_274_p1 = tmp_8_reg_732;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_274_p1 = tmp_8_fu_357_p3;
    end else begin
        grp_fu_274_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_274_p2 = tmp_reg_705;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_274_p2 = tmp_fu_310_p3;
    end else begin
        grp_fu_274_p2 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_279_p0 = icmp_ln14_reg_717;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_279_p0 = icmp_ln14_fu_341_p2;
    end else begin
        grp_fu_279_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_279_p1 = tmp_8_reg_732;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_279_p1 = tmp_8_fu_357_p3;
    end else begin
        grp_fu_279_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_279_p2 = tmp_reg_705;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_279_p2 = tmp_fu_310_p3;
    end else begin
        grp_fu_279_p2 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            keys_t_address0 = zext_ln21_10_fu_640_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            keys_t_address0 = zext_ln21_8_fu_580_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            keys_t_address0 = zext_ln21_7_fu_506_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            keys_t_address0 = zext_ln21_5_fu_406_p1;
        end else begin
            keys_t_address0 = 'bx;
        end
    end else begin
        keys_t_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            keys_t_address1 = zext_ln21_9_fu_630_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            keys_t_address1 = tmp_s_fu_566_p3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            keys_t_address1 = zext_ln21_6_fu_495_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            keys_t_address1 = zext_ln14_fu_391_p1;
        end else begin
            keys_t_address1 = 'bx;
        end
    end else begin
        keys_t_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        keys_t_ce0 = 1'b1;
    end else begin
        keys_t_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        keys_t_ce1 = 1'b1;
    end else begin
        keys_t_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            queries_address0 = select_ln13_9_cast_fu_620_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            queries_address0 = select_ln13_7_cast_fu_548_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            queries_address0 = select_ln13_5_cast_fu_475_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            queries_address0 = select_ln13_3_cast_fu_386_p1;
        end else begin
            queries_address0 = 'bx;
        end
    end else begin
        queries_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            queries_address1 = select_ln13_8_cast_fu_610_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            queries_address1 = select_ln13_6_cast_fu_537_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            queries_address1 = select_ln13_4_cast_fu_464_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            queries_address1 = zext_ln13_fu_375_p1;
        end else begin
            queries_address1 = 'bx;
        end
    end else begin
        queries_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        queries_ce0 = 1'b1;
    end else begin
        queries_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        queries_ce1 = 1'b1;
    end else begin
        queries_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        score_m_ce0 = 1'b1;
    end else begin
        score_m_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        score_m_we0 = 1'b1;
    end else begin
        score_m_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to6 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln13_1_fu_326_p2 = (ap_sig_allocacmp_indvar_flatten_load + 4'd1);

assign add_ln13_fu_335_p2 = (ap_sig_allocacmp_m_1 + 2'd1);

assign add_ln14_fu_411_p2 = (select_ln13_fu_349_p3 + 2'd1);

assign add_ln21_1_fu_400_p2 = (zext_ln21_2_fu_396_p1 + 3'd3);

assign add_ln21_2_fu_489_p2 = (zext_ln21_3_fu_480_p1 + 4'd6);

assign add_ln21_3_fu_500_p2 = ($signed(zext_ln21_3_fu_480_p1) + $signed(4'd9));

assign add_ln21_4_fu_574_p2 = (zext_ln21_1_fu_563_p1 + 5'd15);

assign add_ln21_5_fu_625_p2 = ($signed(zext_ln21_1_reg_841) + $signed(5'd18));

assign add_ln21_6_fu_635_p2 = ($signed(zext_ln21_1_reg_841) + $signed(5'd21));

assign add_ln21_fu_483_p2 = (sub_ln21_fu_442_p2 + zext_ln21_3_fu_480_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_374 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign bitcast_ln13_1_fu_453_p1 = queries_q0;

assign bitcast_ln13_2_fu_521_p1 = queries_q1;

assign bitcast_ln13_3_fu_526_p1 = queries_q0;

assign bitcast_ln13_4_fu_595_p1 = queries_q1;

assign bitcast_ln13_5_fu_600_p1 = queries_q0;

assign bitcast_ln13_6_fu_655_p1 = queries_q1;

assign bitcast_ln13_7_fu_660_p1 = queries_q0;

assign bitcast_ln13_fu_448_p1 = queries_q1;

assign bitcast_ln21_1_fu_516_p1 = keys_t_q0;

assign bitcast_ln21_2_fu_585_p1 = keys_t_q1;

assign bitcast_ln21_3_fu_590_p1 = keys_t_q0;

assign bitcast_ln21_4_fu_645_p1 = keys_t_q1;

assign bitcast_ln21_5_fu_650_p1 = keys_t_q0;

assign bitcast_ln21_6_fu_665_p1 = keys_t_q1;

assign bitcast_ln21_7_fu_670_p1 = keys_t_q0;

assign bitcast_ln21_fu_511_p1 = keys_t_q1;

assign grp_fu_274_p3 = ((grp_fu_274_p0[0:0] == 1'b1) ? grp_fu_274_p1 : grp_fu_274_p2);

assign grp_fu_279_p3 = ((grp_fu_279_p0[0:0] == 1'b1) ? grp_fu_279_p1 : grp_fu_279_p2);

assign icmp_ln13_fu_320_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_341_p2 = ((ap_sig_allocacmp_o_load == 2'd3) ? 1'b1 : 1'b0);

assign or_ln13_1_fu_458_p2 = (grp_fu_274_p3 | 5'd2);

assign or_ln13_2_fu_469_p2 = (grp_fu_279_p3 | 5'd3);

assign or_ln13_3_fu_531_p2 = (grp_fu_274_p3 | 5'd4);

assign or_ln13_4_fu_542_p2 = (grp_fu_279_p3 | 5'd5);

assign or_ln13_5_fu_605_p2 = (select_ln13_15_reg_831 | 5'd6);

assign or_ln13_6_fu_615_p2 = (select_ln13_16_reg_836 | 5'd7);

assign or_ln13_fu_380_p2 = (grp_fu_279_p3 | 5'd1);

assign p_shl_cast_fu_435_p3 = {{select_ln13_1_reg_740}, {2'd0}};

assign score_m_address0 = zext_ln21_4_fu_675_p1;

assign score_m_d0 = reg_284;

assign select_ln13_15_fu_553_p3 = ((icmp_ln14_reg_717[0:0] == 1'b1) ? tmp_8_reg_732 : tmp_reg_705);

assign select_ln13_16_fu_558_p3 = ((icmp_ln14_reg_717[0:0] == 1'b1) ? tmp_8_reg_732 : tmp_reg_705);

assign select_ln13_1_fu_367_p3 = ((icmp_ln14_fu_341_p2[0:0] == 1'b1) ? add_ln13_fu_335_p2 : ap_sig_allocacmp_m_1);

assign select_ln13_3_cast_fu_386_p1 = or_ln13_fu_380_p2;

assign select_ln13_4_cast_fu_464_p1 = or_ln13_1_fu_458_p2;

assign select_ln13_5_cast_fu_475_p1 = or_ln13_2_fu_469_p2;

assign select_ln13_6_cast_fu_537_p1 = or_ln13_3_fu_531_p2;

assign select_ln13_7_cast_fu_548_p1 = or_ln13_4_fu_542_p2;

assign select_ln13_8_cast_fu_610_p1 = or_ln13_5_fu_605_p2;

assign select_ln13_9_cast_fu_620_p1 = or_ln13_6_fu_615_p2;

assign select_ln13_fu_349_p3 = ((icmp_ln14_fu_341_p2[0:0] == 1'b1) ? 2'd0 : ap_sig_allocacmp_o_load);

assign sub_ln21_fu_442_p2 = (p_shl_cast_fu_435_p3 - zext_ln21_fu_432_p1);

assign tmp_8_fu_357_p3 = {{add_ln13_fu_335_p2}, {3'd0}};

assign tmp_fu_310_p3 = {{ap_sig_allocacmp_m_1}, {3'd0}};

assign tmp_s_fu_566_p3 = {{62'd3}, {select_ln13_reg_725}};

assign zext_ln13_fu_375_p1 = grp_fu_274_p3;

assign zext_ln14_fu_391_p1 = select_ln13_fu_349_p3;

assign zext_ln21_10_fu_640_p1 = add_ln21_6_fu_635_p2;

assign zext_ln21_1_fu_563_p1 = select_ln13_reg_725;

assign zext_ln21_2_fu_396_p1 = select_ln13_fu_349_p3;

assign zext_ln21_3_fu_480_p1 = select_ln13_reg_725;

assign zext_ln21_4_fu_675_p1 = add_ln21_reg_786_pp0_iter6_reg;

assign zext_ln21_5_fu_406_p1 = add_ln21_1_fu_400_p2;

assign zext_ln21_6_fu_495_p1 = add_ln21_2_fu_489_p2;

assign zext_ln21_7_fu_506_p1 = add_ln21_3_fu_500_p2;

assign zext_ln21_8_fu_580_p1 = add_ln21_4_fu_574_p2;

assign zext_ln21_9_fu_630_p1 = add_ln21_5_fu_625_p2;

assign zext_ln21_fu_432_p1 = select_ln13_1_reg_740;

always @ (posedge ap_clk) begin
    tmp_reg_705[2:0] <= 3'b000;
    tmp_8_reg_732[2:0] <= 3'b000;
    select_ln13_15_reg_831[2:0] <= 3'b000;
    select_ln13_16_reg_836[2:0] <= 3'b000;
    zext_ln21_1_reg_841[4:2] <= 3'b000;
end

endmodule //score_matrix
