// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="score_matrix_score_matrix,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu11p-flga2577-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.297000,HLS_SYN_LAT=25,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1892,HLS_SYN_LUT=1839,HLS_VERSION=2021_1}" *)

module score_matrix (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        score_m_0_address0,
        score_m_0_ce0,
        score_m_0_we0,
        score_m_0_d0,
        score_m_0_address1,
        score_m_0_ce1,
        score_m_0_we1,
        score_m_0_d1,
        score_m_1_address0,
        score_m_1_ce0,
        score_m_1_we0,
        score_m_1_d0,
        score_m_1_address1,
        score_m_1_ce1,
        score_m_1_we1,
        score_m_1_d1,
        score_m_2_address0,
        score_m_2_ce0,
        score_m_2_we0,
        score_m_2_d0,
        score_m_2_address1,
        score_m_2_ce1,
        score_m_2_we1,
        score_m_2_d1,
        queries_0_address0,
        queries_0_ce0,
        queries_0_q0,
        queries_0_address1,
        queries_0_ce1,
        queries_0_q1,
        queries_1_address0,
        queries_1_ce0,
        queries_1_q0,
        queries_1_address1,
        queries_1_ce1,
        queries_1_q1,
        queries_2_address0,
        queries_2_ce0,
        queries_2_q0,
        queries_2_address1,
        queries_2_ce1,
        queries_2_q1,
        keys_t_0_address0,
        keys_t_0_ce0,
        keys_t_0_q0,
        keys_t_1_address0,
        keys_t_1_ce0,
        keys_t_1_q0,
        keys_t_2_address0,
        keys_t_2_ce0,
        keys_t_2_q0
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [1:0] score_m_0_address0;
output   score_m_0_ce0;
output   score_m_0_we0;
output  [31:0] score_m_0_d0;
output  [1:0] score_m_0_address1;
output   score_m_0_ce1;
output   score_m_0_we1;
output  [31:0] score_m_0_d1;
output  [1:0] score_m_1_address0;
output   score_m_1_ce0;
output   score_m_1_we0;
output  [31:0] score_m_1_d0;
output  [1:0] score_m_1_address1;
output   score_m_1_ce1;
output   score_m_1_we1;
output  [31:0] score_m_1_d1;
output  [1:0] score_m_2_address0;
output   score_m_2_ce0;
output   score_m_2_we0;
output  [31:0] score_m_2_d0;
output  [1:0] score_m_2_address1;
output   score_m_2_ce1;
output   score_m_2_we1;
output  [31:0] score_m_2_d1;
output  [1:0] queries_0_address0;
output   queries_0_ce0;
input  [31:0] queries_0_q0;
output  [1:0] queries_0_address1;
output   queries_0_ce1;
input  [31:0] queries_0_q1;
output  [1:0] queries_1_address0;
output   queries_1_ce0;
input  [31:0] queries_1_q0;
output  [1:0] queries_1_address1;
output   queries_1_ce1;
input  [31:0] queries_1_q1;
output  [1:0] queries_2_address0;
output   queries_2_ce0;
input  [31:0] queries_2_q0;
output  [1:0] queries_2_address1;
output   queries_2_ce1;
input  [31:0] queries_2_q1;
output  [1:0] keys_t_0_address0;
output   keys_t_0_ce0;
input  [31:0] keys_t_0_q0;
output  [1:0] keys_t_1_address0;
output   keys_t_1_ce0;
input  [31:0] keys_t_1_q0;
output  [1:0] keys_t_2_address0;
output   keys_t_2_ce0;
input  [31:0] keys_t_2_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[1:0] queries_0_address0;
reg queries_0_ce0;
reg queries_0_ce1;
reg[1:0] queries_1_address0;
reg queries_1_ce0;
reg queries_1_ce1;
reg[1:0] queries_2_address0;
reg queries_2_ce0;
reg queries_2_ce1;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] queries_2_load_reg_196;
wire    ap_CS_fsm_state2;
reg   [31:0] queries_0_load_2_reg_211;
reg   [31:0] queries_1_load_2_reg_216;
reg   [31:0] queries_2_load_1_reg_241;
wire    ap_CS_fsm_state3;
reg   [31:0] queries_2_load_2_reg_246;
reg   [31:0] queries_0_load_1_reg_251;
reg   [31:0] queries_1_load_1_reg_256;
reg   [31:0] queries_0_load_reg_261;
reg   [31:0] queries_1_load_reg_266;
wire    grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_ap_start;
wire    grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_ap_done;
wire    grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_ap_idle;
wire    grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_ap_ready;
wire   [1:0] grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_0_address0;
wire    grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_0_ce0;
wire    grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_0_we0;
wire   [31:0] grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_0_d0;
wire   [1:0] grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_0_address1;
wire    grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_0_ce1;
wire    grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_0_we1;
wire   [31:0] grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_0_d1;
wire   [1:0] grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_keys_t_2_address0;
wire    grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_keys_t_2_ce0;
wire   [1:0] grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_keys_t_0_address0;
wire    grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_keys_t_0_ce0;
wire   [1:0] grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_keys_t_1_address0;
wire    grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_keys_t_1_ce0;
wire   [1:0] grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_1_address0;
wire    grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_1_ce0;
wire    grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_1_we0;
wire   [31:0] grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_1_d0;
wire   [1:0] grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_1_address1;
wire    grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_1_ce1;
wire    grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_1_we1;
wire   [31:0] grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_1_d1;
wire   [1:0] grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_2_address0;
wire    grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_2_ce0;
wire    grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_2_we0;
wire   [31:0] grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_2_d0;
wire   [1:0] grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_2_address1;
wire    grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_2_ce1;
wire    grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_2_we1;
wire   [31:0] grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_2_d1;
reg    grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_ap_start_reg;
wire    ap_CS_fsm_state4;
reg   [3:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_ap_start_reg = 1'b0;
end

score_matrix_score_matrix_Pipeline_LOOP1_LOOP2 grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_ap_start),
    .ap_done(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_ap_done),
    .ap_idle(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_ap_idle),
    .ap_ready(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_ap_ready),
    .queries_0_load(queries_0_load_reg_261),
    .queries_2_load(queries_2_load_reg_196),
    .queries_1_load(queries_1_load_reg_266),
    .queries_0_load_1(queries_0_load_1_reg_251),
    .queries_2_load_1(queries_2_load_1_reg_241),
    .queries_1_load_1(queries_1_load_1_reg_256),
    .queries_0_load_2(queries_0_load_2_reg_211),
    .queries_2_load_2(queries_2_load_2_reg_246),
    .queries_1_load_2(queries_1_load_2_reg_216),
    .score_m_0_address0(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_0_address0),
    .score_m_0_ce0(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_0_ce0),
    .score_m_0_we0(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_0_we0),
    .score_m_0_d0(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_0_d0),
    .score_m_0_address1(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_0_address1),
    .score_m_0_ce1(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_0_ce1),
    .score_m_0_we1(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_0_we1),
    .score_m_0_d1(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_0_d1),
    .keys_t_2_address0(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_keys_t_2_address0),
    .keys_t_2_ce0(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_keys_t_2_ce0),
    .keys_t_2_q0(keys_t_2_q0),
    .keys_t_0_address0(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_keys_t_0_address0),
    .keys_t_0_ce0(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_keys_t_0_ce0),
    .keys_t_0_q0(keys_t_0_q0),
    .keys_t_1_address0(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_keys_t_1_address0),
    .keys_t_1_ce0(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_keys_t_1_ce0),
    .keys_t_1_q0(keys_t_1_q0),
    .score_m_1_address0(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_1_address0),
    .score_m_1_ce0(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_1_ce0),
    .score_m_1_we0(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_1_we0),
    .score_m_1_d0(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_1_d0),
    .score_m_1_address1(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_1_address1),
    .score_m_1_ce1(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_1_ce1),
    .score_m_1_we1(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_1_we1),
    .score_m_1_d1(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_1_d1),
    .score_m_2_address0(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_2_address0),
    .score_m_2_ce0(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_2_ce0),
    .score_m_2_we0(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_2_we0),
    .score_m_2_d0(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_2_d0),
    .score_m_2_address1(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_2_address1),
    .score_m_2_ce1(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_2_ce1),
    .score_m_2_we1(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_2_we1),
    .score_m_2_d1(grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_2_d1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_ap_start_reg <= 1'b1;
        end else if ((grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_ap_ready == 1'b1)) begin
            grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        queries_0_load_1_reg_251 <= queries_0_q1;
        queries_0_load_reg_261 <= queries_0_q0;
        queries_1_load_1_reg_256 <= queries_1_q1;
        queries_1_load_reg_266 <= queries_1_q0;
        queries_2_load_1_reg_241 <= queries_2_q1;
        queries_2_load_2_reg_246 <= queries_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        queries_0_load_2_reg_211 <= queries_0_q0;
        queries_1_load_2_reg_216 <= queries_1_q0;
        queries_2_load_reg_196 <= queries_2_q0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        queries_0_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        queries_0_address0 = 64'd2;
    end else begin
        queries_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        queries_0_ce0 = 1'b1;
    end else begin
        queries_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        queries_0_ce1 = 1'b1;
    end else begin
        queries_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        queries_1_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        queries_1_address0 = 64'd2;
    end else begin
        queries_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        queries_1_ce0 = 1'b1;
    end else begin
        queries_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        queries_1_ce1 = 1'b1;
    end else begin
        queries_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        queries_2_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        queries_2_address0 = 64'd0;
    end else begin
        queries_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        queries_2_ce0 = 1'b1;
    end else begin
        queries_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        queries_2_ce1 = 1'b1;
    end else begin
        queries_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_ap_start = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_ap_start_reg;

assign keys_t_0_address0 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_keys_t_0_address0;

assign keys_t_0_ce0 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_keys_t_0_ce0;

assign keys_t_1_address0 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_keys_t_1_address0;

assign keys_t_1_ce0 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_keys_t_1_ce0;

assign keys_t_2_address0 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_keys_t_2_address0;

assign keys_t_2_ce0 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_keys_t_2_ce0;

assign queries_0_address1 = 64'd1;

assign queries_1_address1 = 64'd1;

assign queries_2_address1 = 64'd1;

assign score_m_0_address0 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_0_address0;

assign score_m_0_address1 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_0_address1;

assign score_m_0_ce0 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_0_ce0;

assign score_m_0_ce1 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_0_ce1;

assign score_m_0_d0 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_0_d0;

assign score_m_0_d1 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_0_d1;

assign score_m_0_we0 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_0_we0;

assign score_m_0_we1 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_0_we1;

assign score_m_1_address0 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_1_address0;

assign score_m_1_address1 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_1_address1;

assign score_m_1_ce0 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_1_ce0;

assign score_m_1_ce1 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_1_ce1;

assign score_m_1_d0 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_1_d0;

assign score_m_1_d1 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_1_d1;

assign score_m_1_we0 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_1_we0;

assign score_m_1_we1 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_1_we1;

assign score_m_2_address0 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_2_address0;

assign score_m_2_address1 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_2_address1;

assign score_m_2_ce0 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_2_ce0;

assign score_m_2_ce1 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_2_ce1;

assign score_m_2_d0 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_2_d0;

assign score_m_2_d1 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_2_d1;

assign score_m_2_we0 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_2_we0;

assign score_m_2_we1 = grp_score_matrix_Pipeline_LOOP1_LOOP2_fu_150_score_m_2_we1;

endmodule //score_matrix
